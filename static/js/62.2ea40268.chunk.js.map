{"version":3,"file":"static/js/62.2ea40268.chunk.js","mappings":"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","sources":["shared/components/TextField/TextField.jsx","modules/AuthForm/initialState.js","webpack://pro-test/./src/modules/AuthForm/authForm.module.scss?d3ea","modules/AuthForm/AuthForm.jsx","webpack://pro-test/./src/pages/AuthPage/auth-page.module.scss?f4ef","pages/AuthPage/AuthPage.jsx","shared/components/Button/Button.jsx"],"sourcesContent":["import { memo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst TextField = ({ type, name, value, placeholder, required, onType, className }) => {\n  return (\n    <input\n      className={className}\n      type={type}\n      value={value}\n      name={name}\n      placeholder={placeholder}\n      required={required}\n      onChange={onType}\n    />\n  );\n};\n\nexport default memo(TextField);\n\nTextField.propTypes = {\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  required: PropTypes.bool.isRequired,\n  onType: PropTypes.func.isRequired,\n};\n","export const initialState = {\n    email: \"\",\n    password: \"\"\n};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"authForm_root__6xo0r\",\"container\":\"authForm_container__5Jd0w\",\"wrapper\":\"authForm_wrapper__VHnmc\",\"form\":\"authForm_form__bSX87\",\"form__buttons\":\"authForm_form__buttons__wLWHk\",\"text\":\"authForm_text__eUDMx\",\"TextField\":\"authForm_TextField__bRO81\",\"button\":\"authForm_button__lHc5e\"};","import { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport TextField from '../../shared/components/TextField/TextField';\nimport Button from '../../shared/components/Button/Button';\n\nimport { initialState } from './initialState';\nimport styles from './authForm.module.scss';\n\nconst AuthForm = ({ onSubmit }) => {\n  const [form, setForm] = useState({ ...initialState });\n  const [type, setType] = useState('login');\n\n  const handleChange = useCallback(({ target }) => {\n    const { name, value } = target;\n    setForm(prevForm => ({\n      ...prevForm,\n      [name]: value,\n    }));\n  }, []);\n\n  const changeType = type => setType(type);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(form, type);\n    setForm({ ...initialState });\n  };\n\n  return (\n    <div className={styles.wrapper}>\n      <form className={styles.form} onSubmit={handleSubmit}>\n        <p className={styles.text}>\n          Login to our app using e-mail and password:\n        </p>\n        <TextField\n          type={'email'}\n          value={form.email}\n          name={'email'}\n          placeholder={'E-mail'}\n          required={true}\n          onType={handleChange}\n          className={styles.TextField}\n        />\n        <TextField\n          type={'password'}\n          value={form.password}\n          name={'password'}\n          placeholder={'Password'}\n          required={true}\n          onType={handleChange}\n          className={styles.TextField}\n        />\n        <div className={styles.form__buttons}>\n          <Button\n            btnText={'Sign In '}\n            isActive={true}\n            type={'submit'}\n            className={styles.button}\n            onClickBtn={() => changeType('login')}\n          />\n          <Button\n            btnText={'Sign Up'}\n            isActive={false}\n            type={'submit'}\n            className={styles.button}\n            onClickBtn={() => changeType('register')}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default AuthForm;\n\nAuthForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"auth-page_root__PeeXY\",\"container\":\"auth-page_container__qrNkI\",\"title\":\"auth-page_title__pTfXe\",\"text\":\"auth-page_text__L6xJv\",\"text_span\":\"auth-page_text_span__Ja8Kg\",\"text_wrapper\":\"auth-page_text_wrapper__LhYE3\",\"auth_wrapper\":\"auth-page_auth_wrapper__lmMPJ\",\"errorNotice\":\"auth-page_errorNotice__MeIMY\"};","import { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport {\n  getLoading,\n  getError,\n} from '../../redux/userAccount/userAccount-selectors';\nimport Loader from '../../shared/components/Loader';\n\nimport { userOperations } from '../../redux/userAccount/userAccount-operations';\n\nimport AuthForm from '../../modules/AuthForm/AuthForm';\nimport styles from './auth-page.module.scss';\n\nconst AuthPage = () => {\n  const isLoading = useSelector(getLoading, shallowEqual);\n  const error = useSelector(getError, shallowEqual);\n  const dispatch = useDispatch();\n\n  const auth = (form, type = 'login') => {\n    if (type === 'register') {\n      dispatch(userOperations.registerUser(form));\n      return;\n    }\n    dispatch(userOperations.loginUser(form));\n  };\n\n  return (\n    <>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <main>\n          <div className=\"container\">\n            <div className={styles.auth_wrapper}>\n              <div className={styles.text_wrapper}>\n                <h2 className={styles.title}>Pro Test</h2>\n                <p className={styles.text}>\n                  <span className={styles.text_span}>[ </span>We will help you\n                  find weak points in knowledge so that you can strengthen it.\n                  We will show you what is relevant to know for a{' '}\n                  <b>QA Engineer</b> and will try to make the learning process\n                  more diverse_<span className={styles.text_span}> ]</span>\n                </p>\n                {!error || (\n                  <h2 className={styles.errorNotice}>Wrong data, try again</h2>\n                )}\n              </div>\n              <AuthForm onSubmit={auth} />\n            </div>\n          </div>\n        </main>\n      )}\n    </>\n  );\n};\n\nexport default AuthPage;\n","// import { memo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClickBtn, btnText, type, className }) => {\n  // console.log('Button render')\n  return (\n    <button className={className} type={type} onClick={onClickBtn}>\n      {btnText}\n    </button>\n  );\n};\n\n// export default memo(Button);\nexport default Button;\n\nButton.propTypes = {\n  className: PropTypes.string.isRequired,\n  onClickBtn: PropTypes.func,\n  btnText: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']).isRequired,\n};\n"],"names":["TextField","type","name","value","placeholder","required","onType","className","onChange","memo","initialState","email","password","onSubmit","useState","form","setForm","setType","handleChange","useCallback","target","prevForm","changeType","styles","e","preventDefault","Button","btnText","isActive","onClickBtn","isLoading","useSelector","getLoading","shallowEqual","error","getError","dispatch","useDispatch","Loader","userOperations","onClick"],"sourceRoot":""}