{"version":3,"file":"static/js/180.eea505f9.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://pro-test/./src/modules/Test/Question/question.module.scss?8de3","modules/Test/Question/Question.jsx","webpack://pro-test/./src/modules/Test/test.module.scss?b992","modules/Test/Test.jsx","pages/TestPage/TestPage.jsx","redux/qaTests/qaTests-selectors.js","shared/components/Button/Button.jsx"],"sourcesContent":["import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"question_root__lXXuc\",\"container\":\"question_container__eucAy\",\"btn\":\"question_btn__dTwoK\",\"answers\":\"question_answers__Lq-cx\",\"answers_title\":\"question_answers_title__bAbj9\",\"answers_title_size_small\":\"question_answers_title_size_small__2MBdh\",\"answers_title_size_medium\":\"question_answers_title_size_medium__vzKiD\",\"answers_title_size_large\":\"question_answers_title_size_large__5pZ+X\",\"answers_form\":\"question_answers_form__U5sHD\",\"answers_form_label\":\"question_answers_form_label__yDpWr\",\"answers_form_radio\":\"question_answers_form_radio__8+ft7\"};","import PropTypes from 'prop-types';\nimport styles from './question.module.scss';\n\nconst Question = ({\n  question: { question, answers, questionId },\n  onChange,\n  selectedAnswers,\n}) => {\n  const answersRadio = answers.map((answer, index) => {    \n    return (\n      <label className={styles.answers_form_label} key={index}>\n        <input\n          className={styles.answers_form_radio}\n          id={questionId}\n          type=\"radio\"\n          name=\"answers\"\n          value={answer}\n          required={false}   \n          onChange={onChange}      \n          checked={Boolean(selectedAnswers.find(\n            e => e?.answer === answer && String(e?.questionId) === String(questionId)\n          ))}\n        />\n        {answer}\n      </label>\n    );\n  });\n  const size =\n    (question?.length < 30 && styles.answers_title_size_large) ||\n    (question?.length < 60 && styles.answers_title_size_medium) ||\n    styles.answers_title_size_small;\n  return (\n    <div className={styles.answers}>\n      <p className={`${styles.answers_title} ${size}`}>{question}</p>\n      <div\n        className={styles.answers_form}       \n        name=\"answer_form\"\n      >\n        {answersRadio}\n      </div>\n    </div>\n  );\n};\n\nexport default Question;\n\nQuestion.defaultProps = {\n  answers: [],\n};\n\nQuestion.propTypes = {\n  answers: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"test_root__tUaKL\",\"container\":\"test_container__eVPM-\",\"test\":\"test_test__DhsX4\",\"test_title\":\"test_test_title__HYL9Z\",\"test_title_btn\":\"test_test_title_btn__6QQ9B\",\"test_curent\":\"test_test_curent__Pf9Eh\",\"test_question\":\"test_test_question__OnMMc\",\"test_question_title\":\"test_test_question_title__nn6z2\",\"test_navigate\":\"test_test_navigate__5H738\",\"test_navigate_btn_prev\":\"test_test_navigate_btn_prev__aCKFI\",\"test_navigate_btn_next\":\"test_test_navigate_btn_next__GZ+88\"};","import { useEffect, useState } from 'react';\n\nimport { Navigate, useNavigate } from 'react-router-dom';\n\nimport { useSelector, shallowEqual, useDispatch } from 'react-redux';\n\nimport { getTestType } from '../../redux/qaTests/qaTests-selectors';\n\nimport { qaOperations } from '../../redux/qaTests/qaTests-operations';\n\nimport Button from 'shared/components/Button';\nimport Question from './Question';\nimport Loader from 'shared/components/Loader';\nimport styles from './test.module.scss';\n\nconst surveyTepes = ['tech', 'theory'];\nconst Test = () => {\n  const testType = useSelector(getTestType, shallowEqual);\n  const [questions, setQuestions] = useState({items:[],\n  loading:true, error:null});\n  const [answers, setAnswers] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  \n\n  useEffect(    \n    () =>{      \n           const localQuestions = localStorage.getItem('questions');           \n      if (localQuestions && JSON.parse(localQuestions).length) {\n        // console.log(localStorage.getItem('testAnswers'))\n        setQuestions({items:JSON.parse(localQuestions), loading:false, error:null})\n        const saveAnswers = JSON.parse(localStorage.getItem('testAnswers'))??{answers:[], currentQuestion:0}\n        setAnswers(saveAnswers.answers??[])\n        setCurrentQuestion(saveAnswers.currentQuestion??0)\n      }  else {\n        !testType || dispatch(qaOperations.getTest(testType)).then(({ payload }) =>{\n          setQuestions({items:payload.data, loading:false, error:null})\n          localStorage.setItem('questions', JSON.stringify(payload.data))\n          localStorage.removeItem('testAnswers')}\n        ).catch(error=>setQuestions({items:[], loading:false, error}))\n      }\n    }\n      ,\n    [dispatch, testType]\n  );\n\n  if (!surveyTepes.includes(testType)) {\n    return <Navigate to=\"/\" />;\n  }\n\n  const onClickFinish = () => {\n    localStorage.removeItem('testAnswers');\n    localStorage.removeItem('questions');\n    if (questions.items?.length === answers?.length) {\n      dispatch(qaOperations.getResults({ answers, type: testType })).then(\n        result => {\n          return result;\n        }\n      );\n      return navigate(\"/results\" );\n    }\n    return navigate('/');\n  };\n\n  if (!questions.items?.length) {\n    return (\n      <main>\n      <div className=\"{styles.test} container\">\n        <div>\n          <h2>{'[Testing ' + testType + ']'}</h2>\n          <Button\n            btnText=\"Finish Test\"\n            type=\"button\"\n            isActive={true}\n            onClickBtn={onClickFinish}\n            className={styles.test_title_btn}\n          />\n        </div>\n        {!questions.loading &&(<p className={styles.error}>Sorry, couldn't get questions.</p>)}\n      </div>\n      {questions.loading && <Loader />}\n      </main>\n    );\n  }\n\n  const onChangeAnswer = ({target:{ id:questionId, value:answer}}) => {    \n    // console.log(questions)\n    const index = answers.findIndex(e => String(e.questionId) === String(questionId));\n\n    setAnswers(prevState => {\n      if (index === -1) {\n        // const newAnswers = [...prevState, { questionId, answer }];\n        const newAnswers = [...prevState, { questionId: Number(questionId), answer }]; // ! ! ! ! \n        localStorage.setItem('testAnswers',JSON.stringify({answers:newAnswers, currentQuestion}))\n        // console.log(newAnswers)\n        return newAnswers;\n      }\n      const newAnswers = [...prevState];\n      newAnswers[index] = { questionId, answer };\n      localStorage.setItem('testAnswers',JSON.stringify({answers:newAnswers, currentQuestion}))\n      console.log(newAnswers)\n      return newAnswers;\n    });\n  };\n\n  const onClickPrevious = () => {\n    setCurrentQuestion(prevState => {\n      if (prevState > 0) {\n        return prevState - 1;\n      }\n      return prevState;\n    });\n  };\n\n  const onClickNext = () => {\n    setCurrentQuestion(prevState => {\n      if (prevState < questions.items.length - 1) {\n        return prevState + 1;\n      }\n      return prevState;\n    });\n  };\n\n  return (\n    <main>\n    <div className={styles.test}>\n      <div className={styles.test_title}>\n        <h2>[Testing<br/>{testType}_]</h2>\n        <Button\n          btnText=\"Finish Test\"\n          type=\"button\"\n          isActive={true}\n          onClickBtn={onClickFinish}\n          className={styles.test_title_btn}\n        />\n      </div>\n      {Boolean(questions.items?.length)&&<div className={styles.test_question}>       \n        <p className={styles.test_question_title}>\n          Question{' '}\n          <span className={styles.test_curent}>{currentQuestion + 1}</span> /{' '}\n          {questions.items.length}{' '}\n        </p>\n\n        <Question\n          question={questions.items[currentQuestion]}\n          onChange={onChangeAnswer}\n          selectedAnswers={answers}\n        />\n      </div>\n        }\n      \n      <div className={styles.test_navigate}>\n        <Button\n          btnText=\"\"\n          type=\"button\"\n          isActive={true}\n          onClickBtn={onClickPrevious}\n          className={styles.test_navigate_btn_prev}\n        />\n        <Button\n          btnText=\"\"\n          type=\"button\"\n          isActive={true}\n          onClickBtn={onClickNext}\n          className={styles.test_navigate_btn_next}\n        />\n      </div>\n    </div>\n    {questions.loading && <Loader />}\n    </main>\n  );\n};\n\nexport default Test;\n","import Test from '../../modules/Test/Test';\n\nconst TestPage = () => {    \n    return <Test/>\n}\n\nexport default TestPage","export const getGlobalState = state => state;\nexport const getTestsArr = state => state.qaTests.questionsArr;\nexport const getTestType = state => state.testType.testType;\nexport const getTestResult = state => state.qaTests.testResult;\n","// import { memo } from 'react';\n\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClickBtn, btnText, type, className }) => {\n  // console.log('Button render')\n  return (\n    <button className={className} type={type} onClick={onClickBtn}>\n      {btnText}\n    </button>\n  );\n};\n\n// export default memo(Button);\nexport default Button;\n\nButton.propTypes = {\n  className: PropTypes.string.isRequired,\n  onClickBtn: PropTypes.func,\n  btnText: PropTypes.string.isRequired,\n  isActive: PropTypes.bool.isRequired,\n  type: PropTypes.oneOf(['button', 'submit', 'reset']).isRequired,\n};\n"],"names":["_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Question","question","answers","questionId","onChange","selectedAnswers","answersRadio","map","answer","index","className","styles","id","type","name","value","required","checked","Boolean","find","e","String","size","length","defaultProps","surveyTepes","testType","useSelector","getTestType","shallowEqual","useState","items","loading","error","questions","setQuestions","setAnswers","currentQuestion","setCurrentQuestion","dispatch","useDispatch","navigate","useNavigate","useEffect","localQuestions","localStorage","getItem","JSON","parse","saveAnswers","qaOperations","then","payload","data","setItem","stringify","removeItem","catch","includes","to","onClickFinish","result","Button","btnText","isActive","onClickBtn","Loader","target","findIndex","prevState","newAnswers","Number","console","log","state","getTestResult","qaTests","testResult","onClick"],"sourceRoot":""}